It's my stupid implementation of dynamic programming algorith for knapsack 0-1 problem. Using 2d matrix to store optimal values for every possible combination of weight-value. Calculates the entire matrix, then search the optimal set from matrix vals and item weigths.
Algorithm requires huge amout of memory in the heap (approximately (num_items * knap_capacity + num_items) * sizeof(int)).
///////////////////////////////////////////////////////////////////////////////
INPUT FORMAT: 
elements_num knap_capacity
elem_1_value elem_1_weight
elem_2_value elem_2_weight
....
elem_n_value elem_n_weight
///////////////////////////////////////////////////////////////////////////////
OUTPUT FORMAT:
optimal_elem_num is_optimal
is_elem_1 is_elem_2 ... is_elem_n 
//comment:// ^ 1 - if element in the knap, else 0
/////////////////////////////////////////////////////////////////////////////// 
By default it reads from stdinput and print to stdout. You could define input and output files by (-i inputfile) and (-o outputfile) args. 
